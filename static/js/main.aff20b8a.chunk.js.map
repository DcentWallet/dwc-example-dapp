{"version":3,"sources":["assets/erc20.svg","helpers/chains.ts","helpers/eip1271.ts","assets/walletconnect-banner.png","assets/eth.svg","assets/xdai.png","helpers/utilities.ts","styles.ts","components/Loader.tsx","components/Button.tsx","components/Column.tsx","components/Wrapper.tsx","components/Modal.tsx","components/Blockie.tsx","components/Header.tsx","helpers/api.ts","helpers/bignumber.ts","components/Banner.tsx","components/Icon.tsx","components/ERC20Icon.tsx","helpers/ethers_utils.js","components/AssetRow.tsx","components/AccountAssets.tsx","helpers/eip712.ts","constant/abi.ts","components/NetworkList.tsx","constant/EthereumType.ts","constant/NetworkType.ts","App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","d","__webpack_exports__","SUPPORTED_CHAINS","name","short_name","chain","network","chain_id","network_id","rpc_url","native_currency","symbol","decimals","contractAddress","balance","eip1271","spec","magicValue","abi","constant","inputs","type","outputs","payable","stateMutability","isValidSignature","address","sig","data","provider","Promise","ethers__WEBPACK_IMPORTED_MODULE_1__","ethers__WEBPACK_IMPORTED_MODULE_2__","arrayify","returnValue","_a","sent","toLowerCase","ellipseAddress","width","slice","sanitizeHex","hex","substring","length","getChainData","chainId","chainData","_chains__WEBPACK_IMPORTED_MODULE_5__","filter","Error","API_KEY","Object","NODE_ENV","PUBLIC_URL","REACT_APP_VERSION","REACT_APP_INFURA_PROJECT_ID","includes","rpcUrl","replace","tslib__WEBPACK_IMPORTED_MODULE_0__","hashMessage","msg","ethereumjs_util__WEBPACK_IMPORTED_MODULE_4__","_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__","buf","Buffer","concat","from","toString","encodePersonalMessage","hash","hashTypedDataMessage","eth_sig_util__WEBPACK_IMPORTED_MODULE_3__","sanitizeData","JSON","parse","hashStruct","domain","types","primaryType","message","encodeTypedDataMessage","recoverAddress","params","result","v","r","s","verifySignature","JsonRpcProvider","getCode","bytecode","_eip1271__WEBPACK_IMPORTED_MODULE_6__","colors","white","black","dark","grey","darkGrey","lightGrey","blue","lightBlue","yellow","orange","green","pink","red","purple","fonts","tiny","small","medium","large","h1","h2","h3","h4","h5","h6","normal","semibold","bold","extrabold","transitions","shadows","globalStyle","OpenSans","load","styled_components_browser_esm","templateObject_1","tslib_es6","SLoader","svg","templateObject_2","size","Loader","props","color","rgb","react","viewBox","stroke","strokeWidth","fill","fillRule","id","x","y","height","rx","propTypes","prop_types","defaultProps","components_Loader","SIcon","div","Button_templateObject_1","SHoverLayer","Button_templateObject_2","SButton","button","templateObject_3","outline","icon","left","disabled","Button","fetching","children","components_Button","SColumn","Column_templateObject_1","spanHeight","maxWidth","center","Column","isRequired","components_Column","fadeIn","Wrapper_templateObject_1","SWrapper","Wrapper_templateObject_2","Wrapper","components_Wrapper","SLightbox","Modal_templateObject_1","offset","opacity","alpha","show","SModalContainer","Modal_templateObject_2","SHitbox","Modal_templateObject_3","SCloseButton","templateObject_4","SCard","templateObject_5","SModalContent","templateObject_6","INITIAL_STATE","components_Modal","_super","Modal","_this","apply","this","arguments","state","toggleModal","window","document","body","getElementsByTagName","style","position","prototype","componentDidUpdate","lightbox","lightboxRect","getBoundingClientRect","top","setState","render","ref","c","onClick","SBlockieWrapper","Blockie_templateObject_1","Blockie","seed","imgUrl","blockies","create","toDataURL","src","alt","components_Blockie","SHeader","Header_templateObject_1","SActiveAccount","Header_templateObject_2","SActiveChain","Header_templateObject_3","SBlockie","Header_templateObject_4","SAddress","Header_templateObject_5","connected","SUnsupportedChain","Header_templateObject_6","SDisconnect","templateObject_7","components_Header","killSession","activeChain","utilities","error","console","react_default","a","createElement","Fragment","api","baseURL","timeout","headers","Accept","Content-Type","apiGetAccountNonce","get","response","apiGetGasPrices","convertStringToNumber","value","bignumber_default","toNumber","convertStringToHex","handleSignificantDecimals","buffer","isInteger","numberOne","numberTwo","absolute","abs","comparedTo","search","toFixed","dp","toFormat","SBannerWrapper","Banner_templateObject_1","SBanner","Banner_templateObject_2","walletconnect_banner_default","components_Banner","Icon_SIcon","img","Icon_templateObject_1","Icon","fallback","onError","event","target","components_Icon","ERC20Icon","erc20_default","components_ERC20Icon","SAssetRow","AssetRow_templateObject_1","SAssetRowLeft","AssetRow_templateObject_2","SAssetName","AssetRow_templateObject_3","SAssetRowRight","AssetRow_templateObject_4","SAssetBalance","AssetRow_templateObject_5","components_AssetRow","asset","log","nativeCurrencyIcon","eth_default","xdai_default","dividedBy","pow","components_AccountAssets","assets","nativeCurrency","setNativeCurrency","_b","tokens","setTokens","defaultNativeCurrency","filteredTokens","key","map","token","eip712","example","EIP712Domain","RelayRequest","GasData","RelayData","version","verifyingContract","encodedFunction","gasData","gasLimit","gasPrice","pctRelayFee","baseRelayFee","relayData","senderAddress","senderNonce","relayWorker","paymaster","balanceOfABI","decimalsOfABI","initProvider","parseInt","providers","getBalance","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","then","abrupt","stop","_x2","getProviderGasPrice","_ref3","_callee3","_context3","getGasPrice","getTokenBalance","_ref4","_callee4","tokenAddress","contract","tokenBalance","_context4","Contract","balanceOf","_x3","_x4","getTokenDecimals","_ref5","_callee5","_context5","_x5","NetworkListWrapper","NetworkList_templateObject_1","NetworkListItem","NetworkList_templateObject_2","components_NetworkList","networkList","selectChainId","networkArr","entries","testNet","Ethereum-Goerli","Polygon-Mumbai","XDC-APOTHEM","activeNet","Ethereum","Polygon","Avalanche","NetworkType","ETHEREUM","POLYGON","RSK","BSC","HECO","FANTOM","CELO","METADIUM","XDAI","KUCOIN","SONGBIRD","AVALANCHE","EWT","ARBITRUM","BODA","OEC","HARMONY","ORBITCHAIN","OPENCOIN","CRONOS","PALM","FLARE","SLayout","App_templateObject_1","SContent","App_templateObject_2","SLanding","App_templateObject_3","SButtonContainer","App_templateObject_4","SConnectButton","App_templateObject_5","SContainer","App_templateObject_6","App_SModalContainer","App_templateObject_7","SModalTitle","templateObject_8","SModalParagraph","templateObject_9","SBalances","templateObject_10","STable","templateObject_11","SRow","templateObject_12","SKey","templateObject_13","SValue","templateObject_14","STestButtonContainer","templateObject_15","STestButton","templateObject_16","SNetworkListWrapper","templateObject_17","App_INITIAL_STATE","connector","showModal","pendingRequest","uri","accounts","qrcodeModalOptions","serviceName","networkType","src_App","App","setChainId","chainNumber","alert","connect","esm","qrcodeModal","cjs_default","createSession","subscribeToEvents","on","payload","onSessionUpdate","onConnect","onDisconnect","ethers_utils_initProvider","resetApp","getAccountAssets","nativeBalance","push","account","tokenChainId","hasOwnProperty","call","toUpperCase","all","tokenDecimals","error_1","testSendTransaction","to","gasPrices","_value","tx","sendTransaction","formattedResult","method","txHash","error_2","testSignTransaction","_nonce","nonce","_gasPrice","slow","price","times","convertAmountToRawNumber","signTransaction","error_3","testLegacySignMessage","Date","toUTCString","msgParams","signMessage","valid","error_4","testStandardSignMessage","hexMsg","dist_esm","error_5","testPersonalSignMessage","signPersonalMessage","error_6","testSignTypedData","stringify","signTypedData","error_7","keys","GlobalStyle","src_templateObject_1","react_dom","getElementById"],"mappings":"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","file":"static/js/main.aff20b8a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/erc20.d46849e6.svg\";","import { IChainData } from \"../helpers/types\";\r\n\r\nexport const SUPPORTED_CHAINS: IChainData[] = [\r\n  {\r\n    name: \"Ethereum Mainnet\",\r\n    short_name: \"eth\",\r\n    chain: \"ETH\",\r\n    network: \"mainnet\",\r\n    chain_id: 1,\r\n    network_id: 1,\r\n    rpc_url: \"https://mainnet.infura.io/v3/7f5bb132d45d426b93f261809d960088\",\r\n    native_currency: {\r\n      symbol: \"ETH\",\r\n      name: \"Ether\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Ethereum Ropsten\",\r\n    short_name: \"rop\",\r\n    chain: \"ETH\",\r\n    network: \"ropsten\",\r\n    chain_id: 3,\r\n    network_id: 3,\r\n    rpc_url: \"https://ropsten.infura.io/v3/%API_KEY%\",\r\n    native_currency: {\r\n      symbol: \"ETH\",\r\n      name: \"Ether\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Ethereum Rinkeby\",\r\n    short_name: \"rin\",\r\n    chain: \"ETH\",\r\n    network: \"rinkeby\",\r\n    chain_id: 4,\r\n    network_id: 4,\r\n    rpc_url: \"https://rinkeby.infura.io/v3/%API_KEY%\",\r\n    native_currency: {\r\n      symbol: \"ETH\",\r\n      name: \"Ether\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Ethereum Görli\",\r\n    short_name: \"gor\",\r\n    chain: \"ETH\",\r\n    network: \"goerli\",\r\n    chain_id: 5,\r\n    network_id: 5,\r\n    rpc_url: \"https://goerli.infura.io/v3/7f5bb132d45d426b93f261809d960088\",\r\n    native_currency: {\r\n      symbol: \"ETH\",\r\n      name: \"Ether\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"RSK Mainnet\",\r\n    short_name: \"rsk\",\r\n    chain: \"RSK\",\r\n    network: \"mainnet\",\r\n    chain_id: 30,\r\n    network_id: 30,\r\n    rpc_url: \"https://public-node.rsk.co\",\r\n    native_currency: {\r\n      symbol: \"RSK\",\r\n      name: \"RSK\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Ethereum Kovan\",\r\n    short_name: \"kov\",\r\n    chain: \"ETH\",\r\n    network: \"kovan\",\r\n    chain_id: 42,\r\n    network_id: 42,\r\n    rpc_url: \"https://kovan.infura.io/v3/%API_KEY%\",\r\n    native_currency: {\r\n      symbol: \"ETH\",\r\n      name: \"Ether\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Ethereum Classic Mainnet\",\r\n    short_name: \"etc\",\r\n    chain: \"ETC\",\r\n    network: \"mainnet\",\r\n    chain_id: 61,\r\n    network_id: 1,\r\n    rpc_url: \"https://ethereumclassic.network\",\r\n    native_currency: {\r\n      symbol: \"ETH\",\r\n      name: \"Ether Classic\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"POA Network Sokol\",\r\n    short_name: \"poa\",\r\n    chain: \"POA\",\r\n    network: \"sokol\",\r\n    chain_id: 77,\r\n    network_id: 77,\r\n    rpc_url: \"https://sokol.poa.network\",\r\n    native_currency: {\r\n      symbol: \"POA\",\r\n      name: \"POA\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"POA Network Core\",\r\n    short_name: \"skl\",\r\n    chain: \"POA\",\r\n    network: \"core\",\r\n    chain_id: 99,\r\n    network_id: 99,\r\n    rpc_url: \"https://core.poa.network\",\r\n    native_currency: {\r\n      symbol: \"POA\",\r\n      name: \"POA\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"xDAI Chain\",\r\n    short_name: \"xdai\",\r\n    chain: \"POA\",\r\n    network: \"dai\",\r\n    chain_id: 100,\r\n    network_id: 100,\r\n    rpc_url: \"https://dai.poa.network\",\r\n    native_currency: {\r\n      symbol: \"xDAI\",\r\n      name: \"xDAI\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Callisto Mainnet\",\r\n    short_name: \"clo\",\r\n    chain: \"callisto\",\r\n    network: \"mainnet\",\r\n    chain_id: 820,\r\n    network_id: 1,\r\n    rpc_url: \"https://clo-geth.0xinfra.com/\",\r\n    native_currency: {\r\n      symbol: \"CLO\",\r\n      name: \"CLO\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Polygon Testnet Mumbai\",\r\n    chain: \"Polygon\",\r\n    network: \"mumbai\",\r\n    rpc_url: \"https://rpc-mumbai.maticvigil.com\",\r\n    native_currency: {\r\n      name: \"MATIC\",\r\n      symbol: \"MATIC\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n    short_name: \"maticmum\",\r\n    chain_id: 80001,\r\n    network_id: 80001,\r\n  },\r\n  {\r\n    name: \"Polygon Mainnet\",\r\n    chain: \"Polygon\",\r\n    network: \"mainnet\",\r\n    rpc_url: \"https://rpc-mainnet.maticvigil.com\",\r\n    native_currency: {\r\n      name: \"MATIC\",\r\n      symbol: \"MATIC\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n    short_name: \"MATIC\",\r\n    chain_id: 137,\r\n    network_id: 137,\r\n  },\r\n  {\r\n    name: \"Avalanche Fuji Testnet\",\r\n    chain: \"AVAX\",\r\n    network: \"fuji\",\r\n    rpc_url: \"https://api.avax-test.network/ext/bc/C/rpc\",\r\n    native_currency: {\r\n      name: \"Avalanche\",\r\n      symbol: \"AVAX\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n    short_name: \"Fuji\",\r\n    chain_id: 43113,\r\n    network_id: 1,\r\n  },\r\n  {\r\n    name: \"Avalanche Mainnet\",\r\n    chain: \"AVAX\",\r\n    network: \"mainnet\",\r\n    rpc_url: \"https://api.avax.network/ext/bc/C/rpc\",\r\n    native_currency: {\r\n      name: \"Avalanche\",\r\n      symbol: \"AVAX\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n    short_name: \"Avalanche\",\r\n    chain_id: 43114,\r\n    network_id: 43114,\r\n  },\r\n  {\r\n    name: \"Arbitrum One\",\r\n    chain_id: 42161,\r\n    network_id: 42161,\r\n    network: \"mainnet\",\r\n    short_name: \"arb1\",\r\n    chain: \"ETH\",\r\n    native_currency: {\r\n      name: \"Ether\",\r\n      symbol: \"AETH\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n    rpc_url: \"https://arbitrum-mainnet.infura.io/v3/%API_KEY%\",\r\n  },\r\n  {\r\n    name: \"Optimism\",\r\n    chain: \"ETH\",\r\n    rpc_url: \"https://mainnet.optimism.io/\",\r\n    network: \"mainnet\",\r\n    native_currency: {\r\n      name: \"Ether\",\r\n      symbol: \"OETH\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n    short_name: \"oeth\",\r\n    chain_id: 10,\r\n    network_id: 10,\r\n  },\r\n];\r\n","import { Contract, providers, utils } from \"ethers\";\r\n\r\nconst spec = {\r\n  magicValue: \"0x1626ba7e\",\r\n  abi: [\r\n    {\r\n      constant: true,\r\n      inputs: [\r\n        {\r\n          name: \"_hash\",\r\n          type: \"bytes32\",\r\n        },\r\n        {\r\n          name: \"_sig\",\r\n          type: \"bytes\",\r\n        },\r\n      ],\r\n      name: \"isValidSignature\",\r\n      outputs: [\r\n        {\r\n          name: \"magicValue\",\r\n          type: \"bytes4\",\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: \"view\",\r\n      type: \"function\",\r\n    },\r\n  ],\r\n};\r\n\r\nasync function isValidSignature(\r\n  address: string,\r\n  sig: string,\r\n  data: string,\r\n  provider: providers.Provider,\r\n  abi = eip1271.spec.abi,\r\n  magicValue = eip1271.spec.magicValue,\r\n): Promise<boolean> {\r\n  let returnValue;\r\n  try {\r\n    returnValue = await new Contract(address, abi, provider).isValidSignature(\r\n      utils.arrayify(data),\r\n      sig,\r\n    );\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n  return returnValue.toLowerCase() === magicValue.toLowerCase();\r\n}\r\n\r\nexport const eip1271 = {\r\n  spec,\r\n  isValidSignature,\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/walletconnect-banner.e1cb8d21.png\";","module.exports = __webpack_public_path__ + \"static/media/eth.5d1692b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/xdai.e37299a8.png\";","import { providers } from \"ethers\";\r\nimport { convertUtf8ToHex } from \"@walletconnect/utils\";\r\nimport { TypedDataUtils } from \"eth-sig-util\";\r\nimport * as ethUtil from \"ethereumjs-util\";\r\nimport { IChainData } from \"./types\";\r\nimport { SUPPORTED_CHAINS } from \"./chains\";\r\nimport { eip1271 } from \"./eip1271\";\r\n\r\nexport function capitalize(string: string): string {\r\n  return string\r\n    .split(\" \")\r\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\r\n    .join(\" \");\r\n}\r\n\r\nexport function ellipseText(text = \"\", maxLength = 9999): string {\r\n  if (text.length <= maxLength) {\r\n    return text;\r\n  }\r\n  const _maxLength = maxLength - 3;\r\n  let ellipse = false;\r\n  let currentLength = 0;\r\n  const result =\r\n    text\r\n      .split(\" \")\r\n      .filter(word => {\r\n        currentLength += word.length;\r\n        if (ellipse || currentLength >= _maxLength) {\r\n          ellipse = true;\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      })\r\n      .join(\" \") + \"...\";\r\n  return result;\r\n}\r\n\r\nexport function ellipseAddress(address = \"\", width = 10): string {\r\n  return `${address.slice(0, width)}...${address.slice(-width)}`;\r\n}\r\n\r\nexport function padLeft(n: string, width: number, z?: string): string {\r\n  z = z || \"0\";\r\n  n = n + \"\";\r\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\r\n}\r\n\r\nexport function sanitizeHex(hex: string): string {\r\n  hex = hex.substring(0, 2) === \"0x\" ? hex.substring(2) : hex;\r\n  if (hex === \"\") {\r\n    return \"\";\r\n  }\r\n  hex = hex.length % 2 !== 0 ? \"0\" + hex : hex;\r\n  return \"0x\" + hex;\r\n}\r\n\r\nexport function removeHexPrefix(hex: string): string {\r\n  return hex.toLowerCase().replace(\"0x\", \"\");\r\n}\r\n\r\nexport function getDataString(func: string, arrVals: any[]): string {\r\n  let val = \"\";\r\n  for (let i = 0; i < arrVals.length; i++) {\r\n    val += padLeft(arrVals[i], 64);\r\n  }\r\n  const data = func + val;\r\n  return data;\r\n}\r\n\r\nexport function isMobile(): boolean {\r\n  let mobile = false;\r\n\r\n  function hasTouchEvent(): boolean {\r\n    try {\r\n      document.createEvent(\"TouchEvent\");\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function hasMobileUserAgent(): boolean {\r\n    if (\r\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(\r\n        navigator.userAgent,\r\n      ) ||\r\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(\r\n        navigator.userAgent.substr(0, 4),\r\n      )\r\n    ) {\r\n      return true;\r\n    } else if (hasTouchEvent()) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  mobile = hasMobileUserAgent();\r\n\r\n  return mobile;\r\n}\r\n\r\nexport function getChainData(chainId: number): IChainData {\r\n  const chainData = SUPPORTED_CHAINS.filter((chain: any) => chain.chain_id === chainId)[0];\r\n\r\n  if (!chainData) {\r\n    throw new Error(\"ChainId missing or not supported\");\r\n  }\r\n\r\n  const API_KEY = process.env.REACT_APP_INFURA_PROJECT_ID;\r\n\r\n  if (\r\n    chainData.rpc_url.includes(\"infura.io\") &&\r\n    chainData.rpc_url.includes(\"%API_KEY%\") &&\r\n    API_KEY\r\n  ) {\r\n    const rpcUrl = chainData.rpc_url.replace(\"%API_KEY%\", API_KEY);\r\n\r\n    return {\r\n      ...chainData,\r\n      rpc_url: rpcUrl,\r\n    };\r\n  }\r\n\r\n  return chainData;\r\n}\r\n\r\nexport function encodePersonalMessage(msg: string): string {\r\n  const data = ethUtil.toBuffer(convertUtf8ToHex(msg));\r\n  const buf = Buffer.concat([\r\n    Buffer.from(\"\\u0019Ethereum Signed Message:\\n\" + data.length.toString(), \"utf8\"),\r\n    data,\r\n  ]);\r\n  return ethUtil.bufferToHex(buf);\r\n}\r\n\r\nexport function hashMessage(msg: string): string {\r\n  const data = encodePersonalMessage(msg);\r\n  const buf = ethUtil.toBuffer(data);\r\n  const hash = ethUtil.keccak256(buf);\r\n  return ethUtil.bufferToHex(hash);\r\n}\r\n\r\nexport function encodeTypedDataMessage(msg: string): string {\r\n  const data = TypedDataUtils.sanitizeData(JSON.parse(msg));\r\n  const buf = Buffer.concat([\r\n    Buffer.from(\"1901\", \"hex\"),\r\n    TypedDataUtils.hashStruct(\"EIP712Domain\", data.domain, data.types),\r\n    TypedDataUtils.hashStruct(data.primaryType as string, data.message, data.types),\r\n  ]);\r\n  return ethUtil.bufferToHex(buf);\r\n}\r\n\r\nexport function hashTypedDataMessage(msg: string): string {\r\n  const data = encodeTypedDataMessage(msg);\r\n  const buf = ethUtil.toBuffer(data);\r\n  const hash = ethUtil.keccak256(buf);\r\n  return ethUtil.bufferToHex(hash);\r\n}\r\n\r\nexport function recoverAddress(sig: string, hash: string): string {\r\n  const params = ethUtil.fromRpcSig(sig);\r\n  const result = ethUtil.ecrecover(ethUtil.toBuffer(hash), params.v, params.r, params.s);\r\n  const signer = ethUtil.bufferToHex(ethUtil.publicToAddress(result));\r\n  return signer;\r\n}\r\n\r\nexport function recoverMessageSignature(sig: string, msg: string): string {\r\n  const hash = hashMessage(msg);\r\n  const signer = recoverAddress(sig, hash);\r\n  return signer;\r\n}\r\n\r\nexport function recoverTypedMessage(sig: string, msg: string): string {\r\n  const hash = hashTypedDataMessage(msg);\r\n  const signer = recoverAddress(sig, hash);\r\n  return signer;\r\n}\r\n\r\nexport async function verifySignature(\r\n  address: string,\r\n  sig: string,\r\n  hash: string,\r\n  chainId: number,\r\n): Promise<boolean> {\r\n  const rpcUrl = getChainData(chainId).rpc_url;\r\n  const provider = new providers.JsonRpcProvider(rpcUrl);\r\n  const bytecode = await provider.getCode(address);\r\n  if (!bytecode || bytecode === \"0x\" || bytecode === \"0x0\" || bytecode === \"0x00\") {\r\n    const signer = recoverAddress(sig, hash);\r\n    return signer.toLowerCase() === address.toLowerCase();\r\n  } else {\r\n    return eip1271.isValidSignature(address, sig, hash, provider);\r\n  }\r\n}\r\n","export const colors = {\r\n  white: \"255, 255, 255\",\r\n  black: \"0, 0, 0\",\r\n  dark: \"12, 12, 13\",\r\n  grey: \"169, 169, 188\",\r\n  darkGrey: \"113, 119, 138\",\r\n  lightGrey: \"212, 212, 212\",\r\n  blue: \"101, 127, 230\",\r\n  lightBlue: \"64, 153, 255\",\r\n  yellow: \"250, 188, 45\",\r\n  orange: \"246, 133, 27\",\r\n  green: \"84, 209, 146\",\r\n  pink: \"255, 51, 102\",\r\n  red: \"214, 75, 71\",\r\n  purple: \"110, 107, 233\",\r\n};\r\n\r\nexport const fonts = {\r\n  size: {\r\n    tiny: \"10px\",\r\n    small: \"14px\",\r\n    medium: \"16px\",\r\n    large: \"18px\",\r\n    h1: \"60px\",\r\n    h2: \"50px\",\r\n    h3: \"40px\",\r\n    h4: \"32px\",\r\n    h5: \"24px\",\r\n    h6: \"20px\",\r\n  },\r\n  weight: {\r\n    normal: 400,\r\n    medium: 500,\r\n    semibold: 600,\r\n    bold: 700,\r\n    extrabold: 800,\r\n  },\r\n  family: {\r\n    OpenSans: `\"Open Sans\", sans-serif`,\r\n  },\r\n};\r\n\r\nexport const transitions = {\r\n  short: \"all 0.1s ease-in-out\",\r\n  base: \"all 0.2s ease-in-out\",\r\n  long: \"all 0.3s ease-in-out\",\r\n  button: \"all 0.15s ease-in-out\",\r\n};\r\n\r\nexport const shadows = {\r\n  soft:\r\n    \"0 4px 6px 0 rgba(50, 50, 93, 0.11), 0 1px 3px 0 rgba(0, 0, 0, 0.08), inset 0 0 1px 0 rgba(0, 0, 0, 0.06)\",\r\n  medium:\r\n    \"0 3px 6px 0 rgba(0, 0, 0, 0.06), 0 0 1px 0 rgba(50, 50, 93, 0.02), 0 5px 10px 0 rgba(59, 59, 92, 0.08)\",\r\n  big: \"0 15px 35px 0 rgba(50, 50, 93, 0.06), 0 5px 15px 0 rgba(50, 50, 93, 0.15)\",\r\n  hover:\r\n    \"0 7px 14px 0 rgba(50, 50, 93, 0.1), 0 3px 6px 0 rgba(0, 0, 0, 0.08), inset 0 0 1px 0 rgba(0, 0, 0, 0.06)\",\r\n};\r\n\r\nexport const responsive = {\r\n  xs: {\r\n    min: \"min-width: 467px\",\r\n    max: \"max-width: 468px\",\r\n  },\r\n  sm: {\r\n    min: \"min-width: 639px\",\r\n    max: \"max-width: 640px\",\r\n  },\r\n  md: {\r\n    min: \"min-width: 959px\",\r\n    max: \"max-width: 960px\",\r\n  },\r\n  lg: {\r\n    min: \"min-width: 1023px\",\r\n    max: \"max-width: 1024px\",\r\n  },\r\n  xl: {\r\n    min: \"min-width: 1399px\",\r\n    max: \"max-width: 1400px\",\r\n  },\r\n};\r\n\r\nexport const globalStyle = `\r\n\r\n  html, body, #root {\r\n    height: 100%;\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  body {\r\n    font-family: ${fonts.family.OpenSans};\r\n    font-style: normal;\r\n    font-stretch: normal;\r\n    font-weight: ${fonts.weight.normal};\r\n    font-size: ${fonts.size.medium};\r\n    background-color: rgb(${colors.white});\r\n    color: rgb(${colors.dark});\r\n    overflow-y:auto;\r\n    text-rendering: optimizeLegibility;\r\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  \t-webkit-text-size-adjust: 100%;\r\n    -webkit-overflow-scrolling: touch;\r\n    -ms-text-size-adjust: 100%;\r\n    -webkit-text-size-adjust: 100%;  \r\n  }\r\n\r\n  button {\r\n    border-style: none;\r\n    line-height: 1em;\r\n    background-image: none;\r\n    outline: 0;\r\n    -webkit-box-shadow: none;\r\n            box-shadow: none;\r\n  }\r\n\r\n  [tabindex] {\r\n    outline: none;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  a, p, h1, h2, h3, h4, h5, h6 {\r\n  \ttext-decoration: none;\r\n  \tmargin: 0;\r\n    padding: 0;\r\n    margin: 0.7em 0;\r\n  }\r\n\r\n  h1 {\r\n    font-size: ${fonts.size.h1}\r\n  }\r\n  h2 {\r\n    font-size: ${fonts.size.h2}\r\n  }\r\n  h3 {\r\n    font-size: ${fonts.size.h3}\r\n  }\r\n  h4 {\r\n    font-size: ${fonts.size.h4}\r\n  }\r\n  h5 {\r\n    font-size: ${fonts.size.h5}\r\n  }\r\n  h6 {\r\n    font-size: ${fonts.size.h6}\r\n  }\r\n\r\n  a {\r\n    background-color: transparent;\r\n    -webkit-text-decoration-skip: objects;  \r\n    text-decoration: none;\r\n    color: inherit;\r\n    outline: none;\r\n  }\r\n\r\n  b,\r\n  strong {\r\n    font-weight: inherit;\r\n    font-weight: bolder;\r\n  }\r\n\r\n  ul, li {\r\n  \tlist-style: none;\r\n  \tmargin: 0;\r\n  \tpadding: 0;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box !important;\r\n  }\r\n\r\n\r\n  input {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  article,\r\n  aside,\r\n  details,\r\n  figcaption,\r\n  figure,\r\n  footer,\r\n  header,\r\n  main,\r\n  menu,\r\n  nav,\r\n  section,\r\n  summary {\r\n    display: block;\r\n  }\r\n  audio,\r\n  canvas,\r\n  progress,\r\n  video {\r\n    display: inline-block;\r\n  }\r\n\r\n  input[type=\"color\"],\r\n  input[type=\"date\"],\r\n  input[type=\"datetime\"],\r\n  input[type=\"datetime-local\"],\r\n  input[type=\"email\"],\r\n  input[type=\"month\"],\r\n  input[type=\"number\"],\r\n  input[type=\"password\"],\r\n  input[type=\"search\"],\r\n  input[type=\"tel\"],\r\n  input[type=\"text\"],\r\n  input[type=\"time\"],\r\n  input[type=\"url\"],\r\n  input[type=\"week\"],\r\n  select:focus,\r\n  textarea {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n","import * as React from \"react\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { colors } from \"../styles\";\r\n\r\nconst load = keyframes`\r\n  0% {\r\n    transform: scale(1.0);\r\n  }\r\n  5% {\r\n    transform: scale(1.0);\r\n  }\r\n  50% {\r\n    transform: scale(0.8);\r\n  }\r\n  95% {\r\n    transform: scale(1.0);\r\n  }\r\n  100% {\r\n    transform: scale(1.0);\r\n  }\r\n`;\r\n\r\ninterface ILoaderStyleProps {\r\n  size: number;\r\n}\r\n\r\ninterface ILoaderProps extends ILoaderStyleProps {\r\n  color: string;\r\n}\r\n\r\nconst SLoader = styled.svg<ILoaderStyleProps>`\r\n  width: ${({ size }) => `${size}px`};\r\n  height: ${({ size }) => `${size}px`};\r\n  animation: ${load} 1s infinite cubic-bezier(0.25, 0, 0.75, 1);\r\n  transform: translateZ(0);\r\n`;\r\n\r\nconst Loader = (props: ILoaderProps) => {\r\n  const { size, color } = props;\r\n  const rgb = `rgb(${colors[color]})`;\r\n  return (\r\n    <SLoader viewBox=\"0 0 186 187\" size={size}>\r\n      <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n        <path\r\n          d=\"M60,10.34375 C32.3857625,10.34375 10,32.7295125 10,60.34375 L10,126.34375 C10,153.957987 32.3857625,176.34375 60,176.34375 L126,176.34375 C153.614237,176.34375 176,153.957987 176,126.34375 L176,60.34375 C176,32.7295125 153.614237,10.34375 126,10.34375 L60,10.34375 Z M60,0.34375 L126,0.34375 C159.137085,0.34375 186,27.206665 186,60.34375 L186,126.34375 C186,159.480835 159.137085,186.34375 126,186.34375 L60,186.34375 C26.862915,186.34375 0,159.480835 0,126.34375 L0,60.34375 C0,27.206665 26.862915,0.34375 60,0.34375 Z\"\r\n          id=\"Rectangle-Copy\"\r\n          fill={rgb}\r\n          fillRule=\"nonzero\"\r\n        />\r\n        <rect id=\"Rectangle\" fill={rgb} x=\"44\" y=\"44.34375\" width=\"98\" height=\"98\" rx=\"35\" />\r\n      </g>\r\n    </SLoader>\r\n  );\r\n};\r\n\r\nLoader.propTypes = {\r\n  size: PropTypes.number,\r\n  color: PropTypes.string,\r\n};\r\n\r\nLoader.defaultProps = {\r\n  size: 40,\r\n  color: \"lightBlue\",\r\n};\r\n\r\nexport default Loader;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"./Loader\";\r\nimport { colors, fonts, shadows, transitions } from \"../styles\";\r\n\r\ninterface IButtonStyleProps {\r\n  fetching: boolean;\r\n  outline: boolean;\r\n  type: \"button\" | \"submit\" | \"reset\";\r\n  color: string;\r\n  disabled: boolean;\r\n  icon: any;\r\n  left: boolean;\r\n}\r\n\r\ninterface IButtonProps extends IButtonStyleProps {\r\n  children: React.ReactNode;\r\n  onClick?: any;\r\n}\r\n\r\nconst SIcon = styled.div`\r\n  position: absolute;\r\n  height: 15px;\r\n  width: 15px;\r\n  margin: 0 8px;\r\n  top: calc((100% - 15px) / 2);\r\n`;\r\n\r\nconst SHoverLayer = styled.div`\r\n  transition: ${transitions.button};\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: rgb(${colors.white}, 0.1);\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  pointer-events: none;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n`;\r\n\r\nconst SButton = styled.button<IButtonStyleProps>`\r\n  transition: ${transitions.button};\r\n  position: relative;\r\n  border: none;\r\n  border-style: none;\r\n  box-sizing: border-box;\r\n  background-color: ${({ outline, color }) => (outline ? \"transparent\" : `rgb(${colors[color]})`)};\r\n  border: ${({ outline, color }) => (outline ? `1px solid rgb(${colors[color]})` : \"none\")};\r\n  color: ${({ outline, color }) => (outline ? `rgb(${colors[color]})` : `rgb(${colors.white})`)};\r\n  box-shadow: ${({ outline }) => (outline ? \"none\" : `${shadows.soft}`)};\r\n  border-radius: 8px;\r\n  font-size: ${fonts.size.medium};\r\n  font-weight: ${fonts.weight.semibold};\r\n  padding: ${({ icon, left }) =>\r\n    icon ? (left ? \"7px 12px 8px 28px\" : \"7px 28px 8px 12px\") : \"8px 12px\"};\r\n  cursor: ${({ disabled }) => (disabled ? \"auto\" : \"pointer\")};\r\n  will-change: transform;\r\n\r\n  &:disabled {\r\n    opacity: 0.6;\r\n    box-shadow: ${({ outline }) => (outline ? \"none\" : `${shadows.soft}`)};\r\n  }\r\n\r\n  @media (hover: hover) {\r\n    &:hover {\r\n      transform: ${({ disabled }) => (!disabled ? \"translateY(-1px)\" : \"none\")};\r\n      box-shadow: ${({ disabled, outline }) =>\r\n        !disabled ? (outline ? \"none\" : `${shadows.hover}`) : `${shadows.soft}`};\r\n    }\r\n\r\n    &:hover ${SHoverLayer} {\r\n      opacity: 1;\r\n      visibility: visible;\r\n    }\r\n  }\r\n\r\n  &:active {\r\n    transform: ${({ disabled }) => (!disabled ? \"translateY(1px)\" : \"none\")};\r\n    box-shadow: ${({ outline }) => (outline ? \"none\" : `${shadows.soft}`)};\r\n    color: ${({ outline, color }) =>\r\n      outline ? `rgb(${colors[color]})` : `rgba(${colors.white}, 0.24)`};\r\n\r\n    & ${SIcon} {\r\n      opacity: 0.8;\r\n    }\r\n  }\r\n\r\n  & ${SIcon} {\r\n    right: ${({ left }) => (left ? \"auto\" : \"0\")};\r\n    left: ${({ left }) => (left ? \"0\" : \"auto\")};\r\n    display: ${({ icon }) => (icon ? \"block\" : \"none\")};\r\n    mask: ${({ icon }) => (icon ? `url(${icon}) center no-repeat` : \"none\")};\r\n    background-color: ${({ outline, color }) =>\r\n      outline ? `rgb(${colors[color]})` : `rgb(${colors.white})`};\r\n    transition: 0.15s ease;\r\n  }\r\n`;\r\n\r\nconst Button = (props: IButtonProps) => (\r\n  <SButton\r\n    {...props}\r\n    type={props.type}\r\n    outline={props.outline}\r\n    color={props.color}\r\n    disabled={props.disabled}\r\n    icon={props.icon}\r\n    left={props.left}\r\n  >\r\n    <SHoverLayer />\r\n    <SIcon />\r\n    {props.fetching ? <Loader size={20} color=\"white\" /> : props.children}\r\n  </SButton>\r\n);\r\n\r\nButton.defaultProps = {\r\n  fetching: false,\r\n  outline: false,\r\n  type: \"button\",\r\n  color: \"lightBlue\",\r\n  disabled: false,\r\n  icon: null,\r\n  left: false,\r\n};\r\n\r\nexport default Button;\r\n","import * as React from \"react\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IColumnStyleProps {\r\n  spanHeight: boolean;\r\n  maxWidth: number;\r\n  center: boolean;\r\n}\r\n\r\ninterface IColumnProps extends IColumnStyleProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst SColumn = styled.div<IColumnStyleProps>`\r\n  position: relative;\r\n  width: 100%;\r\n  height: ${({ spanHeight }) => (spanHeight ? \"100%\" : \"auto\")};\r\n  max-width: ${({ maxWidth }) => `${maxWidth}px`};\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: ${({ center }) => (center ? \"center\" : \"flex-start\")};\r\n`;\r\n\r\nconst Column = (props: IColumnProps) => {\r\n  const { children, spanHeight, maxWidth, center } = props;\r\n  return (\r\n    <SColumn {...props} spanHeight={spanHeight} maxWidth={maxWidth} center={center}>\r\n      {children}\r\n    </SColumn>\r\n  );\r\n};\r\n\r\nColumn.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  spanHeight: PropTypes.bool,\r\n  maxWidth: PropTypes.number,\r\n  center: PropTypes.bool,\r\n};\r\n\r\nColumn.defaultProps = {\r\n  spanHeight: false,\r\n  maxWidth: 600,\r\n  center: false,\r\n};\r\n\r\nexport default Column;\r\n","import * as React from \"react\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst fadeIn = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\ninterface IWrapperStyleProps {\r\n  center: boolean;\r\n}\r\n\r\nconst SWrapper = styled.div<IWrapperStyleProps>`\r\n  will-change: transform, opacity;\r\n  animation: ${fadeIn} 0.7s ease 0s normal 1;\r\n  min-height: 200px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: ${({ center }) => (center ? `center` : `flex-start`)};\r\n`;\r\n\r\ninterface IWrapperProps extends IWrapperStyleProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Wrapper = (props: IWrapperProps) => {\r\n  const { children, center } = props;\r\n  return (\r\n    <SWrapper {...props} center={center}>\r\n      {children}\r\n    </SWrapper>\r\n  );\r\n};\r\n\r\nWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  center: PropTypes.bool,\r\n};\r\n\r\nWrapper.defaultProps = {\r\n  center: false,\r\n};\r\n\r\nexport default Wrapper;\r\n","import * as React from \"react\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { colors, transitions } from \"../styles\";\r\n\r\ninterface ILightboxStyleProps {\r\n  show: boolean;\r\n  offset: number;\r\n  opacity?: number;\r\n}\r\n\r\nconst SLightbox = styled.div<ILightboxStyleProps>`\r\n  transition: opacity 0.1s ease-in-out;\r\n  text-align: center;\r\n  position: absolute;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  margin-left: -50vw;\r\n  top: ${({ offset }) => (offset ? `-${offset}px` : 0)};\r\n  left: 50%;\r\n  z-index: 2;\r\n  will-change: opacity;\r\n  background-color: ${({ opacity }) => {\r\n    let alpha = 0.4;\r\n    if (typeof opacity === \"number\") {\r\n      alpha = opacity;\r\n    }\r\n    return `rgba(0, 0, 0, ${alpha})`;\r\n  }};\r\n  opacity: ${({ show }) => (show ? 1 : 0)};\r\n  visibility: ${({ show }) => (show ? \"visible\" : \"hidden\")};\r\n  pointer-events: ${({ show }) => (show ? \"auto\" : \"none\")};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst SModalContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst SHitbox = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\n\r\ninterface ICloseButtonStyleProps {\r\n  size: number;\r\n  color: string;\r\n  onClick?: any;\r\n}\r\n\r\nconst SCloseButton = styled.div<ICloseButtonStyleProps>`\r\n  transition: ${transitions.short};\r\n  position: absolute;\r\n  width: ${({ size }) => `${size}px`};\r\n  height: ${({ size }) => `${size}px`};\r\n  right: ${({ size }) => `${size / 1.6667}px`};\r\n  top: ${({ size }) => `${size / 1.6667}px`};\r\n  opacity: 0.5;\r\n  cursor: pointer;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n  &:before,\r\n  &:after {\r\n    position: absolute;\r\n    content: \" \";\r\n    height: ${({ size }) => `${size}px`};\r\n    width: 2px;\r\n    background: ${({ color }) => `rgb(${colors[color]})`};\r\n  }\r\n  &:before {\r\n    transform: rotate(45deg);\r\n  }\r\n  &:after {\r\n    transform: rotate(-45deg);\r\n  }\r\n`;\r\n\r\nconst SCard = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 500px;\r\n  padding: 25px;\r\n  background-color: rgb(${colors.white});\r\n  border-radius: 6px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst SModalContent = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  position: relative;\r\n  word-wrap: break-word;\r\n`;\r\n\r\ninterface IModalState {\r\n  offset: number;\r\n}\r\n\r\ninterface IModalProps {\r\n  children: React.ReactNode;\r\n  show: boolean;\r\n  toggleModal: any;\r\n  opacity?: number;\r\n}\r\n\r\nconst INITIAL_STATE: IModalState = {\r\n  offset: 0,\r\n};\r\n\r\nclass Modal extends React.Component<IModalProps, IModalState> {\r\n  public static propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    show: PropTypes.bool.isRequired,\r\n    toggleModal: PropTypes.func.isRequired,\r\n    opacity: PropTypes.number,\r\n  };\r\n\r\n  public lightbox?: HTMLDivElement | null;\r\n\r\n  public state: IModalState = {\r\n    ...INITIAL_STATE,\r\n  };\r\n\r\n  public componentDidUpdate() {\r\n    if (this.lightbox) {\r\n      const lightboxRect = this.lightbox.getBoundingClientRect();\r\n      const offset = lightboxRect.top > 0 ? lightboxRect.top : 0;\r\n\r\n      if (offset !== INITIAL_STATE.offset && offset !== this.state.offset) {\r\n        this.setState({ offset });\r\n      }\r\n    }\r\n  }\r\n\r\n  public toggleModal = async () => {\r\n    const d = typeof window !== \"undefined\" ? document : \"\";\r\n    const body = d ? d.body || d.getElementsByTagName(\"body\")[0] : \"\";\r\n    if (body) {\r\n      if (this.props.show) {\r\n        body.style.position = \"\";\r\n      } else {\r\n        body.style.position = \"fixed\";\r\n      }\r\n    }\r\n    this.props.toggleModal();\r\n  };\r\n\r\n  public render() {\r\n    const { offset } = this.state;\r\n    const { children, show, opacity } = this.props;\r\n    return (\r\n      <SLightbox show={show} offset={offset} opacity={opacity} ref={c => (this.lightbox = c)}>\r\n        <SModalContainer>\r\n          <SHitbox onClick={this.toggleModal} />\r\n\r\n          <SCard>\r\n            <SCloseButton size={25} color={\"dark\"} onClick={this.toggleModal} />\r\n            <SModalContent>{children}</SModalContent>\r\n          </SCard>\r\n        </SModalContainer>\r\n      </SLightbox>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IBlockieStyleProps {\r\n  size?: number;\r\n}\r\n\r\ninterface IBlockieProps extends IBlockieStyleProps {\r\n  address: string;\r\n}\r\n\r\nconst SBlockieWrapper = styled.div<IBlockieStyleProps>`\r\n  width: ${({ size }) => `${size}px`};\r\n  height: ${({ size }) => `${size}px`};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 6px;\r\n  overflow: hidden;\r\n  & img {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Blockie = (props: IBlockieProps) => {\r\n  const seed = props.address.toLowerCase() || \"\";\r\n  const imgUrl = window.blockies\r\n    .create({\r\n      seed,\r\n    })\r\n    .toDataURL();\r\n  return (\r\n    <SBlockieWrapper {...props} size={props.size}>\r\n      <img src={imgUrl} alt={props.address} />\r\n    </SBlockieWrapper>\r\n  );\r\n};\r\n\r\nBlockie.defaultProps = {\r\n  address: \"0x0000000000000000000000000000000000000000\",\r\n  size: 30,\r\n};\r\n\r\nexport default Blockie;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Blockie from \"./Blockie\";\r\nimport { ellipseAddress, getChainData } from \"../helpers/utilities\";\r\nimport { transitions } from \"../styles\";\r\n\r\nconst SHeader = styled.div`\r\n  margin-top: -1px;\r\n  margin-bottom: 1px;\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 16px;\r\n`;\r\n\r\nconst SActiveAccount = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst SActiveChain = styled(SActiveAccount as any)`\r\n  flex-direction: column;\r\n  text-align: left;\r\n  align-items: flex-start;\r\n  & p {\r\n    font-size: 0.8em;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  & p:nth-child(2) {\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst SBlockie = styled(Blockie as any)`\r\n  margin-right: 10px;\r\n`;\r\n\r\ninterface IHeaderStyle {\r\n  connected: boolean;\r\n}\r\n\r\nconst SAddress = styled.p<IHeaderStyle>`\r\n  transition: ${transitions.base};\r\n  font-weight: bold;\r\n  margin: ${({ connected }) => (connected ? \"-2px auto 0.7em\" : \"0\")};\r\n`;\r\n\r\nconst SUnsupportedChain = styled.div`\r\n  transition: ${transitions.base};\r\n  font-weight: bold;\r\n  color: red;\r\n`;\r\n\r\nconst SDisconnect = styled.div<IHeaderStyle>`\r\n  transition: ${transitions.button};\r\n  font-size: 12px;\r\n  font-family: monospace;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 20px;\r\n  opacity: 0.7;\r\n  cursor: pointer;\r\n\r\n  opacity: ${({ connected }) => (connected ? 1 : 0)};\r\n  visibility: ${({ connected }) => (connected ? \"visible\" : \"hidden\")};\r\n  pointer-events: ${({ connected }) => (connected ? \"auto\" : \"none\")};\r\n\r\n  &:hover {\r\n    transform: translateY(-1px);\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\ninterface IHeaderProps {\r\n  killSession: () => void;\r\n  connected: boolean;\r\n  address: string;\r\n  chainId: number;\r\n}\r\n\r\nconst Header = ({ connected, address, chainId, killSession }: IHeaderProps) => {\r\n  let activeChain = null;\r\n\r\n  try {\r\n    activeChain = chainId ? getChainData(chainId).name : null;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n\r\n  return (\r\n    <SHeader>\r\n      {connected && (\r\n        <SActiveChain>\r\n          {activeChain ? (\r\n            <>\r\n              <p>Connected to</p>\r\n              <p>{activeChain}</p>\r\n            </>\r\n          ) : (\r\n            <SUnsupportedChain>\r\n              <p>Chain not supported.</p>\r\n              <p>Please switch to a supported chain in your wallet.</p>\r\n            </SUnsupportedChain>\r\n          )}\r\n        </SActiveChain>\r\n      )}\r\n      {address && (\r\n        <SActiveAccount>\r\n          <SBlockie address={address} />\r\n          <SAddress connected={connected}>{ellipseAddress(address)}</SAddress>\r\n          <SDisconnect connected={connected} onClick={killSession}>\r\n            {\"Disconnect\"}\r\n          </SDisconnect>\r\n        </SActiveAccount>\r\n      )}\r\n    </SHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios, { AxiosInstance } from \"axios\";\r\nimport { IAssetData, IGasPrices, IParsedTx } from \"./types\";\r\n\r\nconst api: AxiosInstance = axios.create({\r\n  baseURL: \"https://ethereum-api.xyz\",\r\n  timeout: 30000, // 30 secs\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport async function apiGetAccountAssets(address: string, chainId: number): Promise<IAssetData[]> {\r\n  const response = await api.get(`/account-assets?address=${address}&chainId=${chainId}`);\r\n  const { result } = response.data;\r\n  return result;\r\n}\r\n\r\nexport async function apiGetAccountTransactions(\r\n  address: string,\r\n  chainId: number,\r\n): Promise<IParsedTx[]> {\r\n  const response = await api.get(`/account-transactions?address=${address}&chainId=${chainId}`);\r\n  const { result } = response.data;\r\n  return result;\r\n}\r\n\r\nexport const apiGetAccountNonce = async (address: string, chainId: number): Promise<string> => {\r\n  const response = await api.get(`/account-nonce?address=${address}&chainId=${chainId}`);\r\n  const { result } = response.data;\r\n  return result;\r\n};\r\n\r\nexport const apiGetGasPrices = async (): Promise<IGasPrices> => {\r\n  const response = await api.get(`/gas-prices`);\r\n  const { result } = response.data;\r\n  return result;\r\n};\r\n","import BigNumber from \"bignumber.js\";\r\n\r\nexport function isNaN(value: string | number): boolean {\r\n  return new BigNumber(`${value}`).isNaN();\r\n}\r\n\r\nexport function isNumber(value: string | number): boolean {\r\n  const isNaNResult = isNaN(value);\r\n  return !isNaNResult;\r\n}\r\n\r\nexport function isInteger(value: string | number): boolean {\r\n  return new BigNumber(`${value}`).isInteger();\r\n}\r\n\r\nexport function isPositive(value: string | number): boolean {\r\n  return new BigNumber(`${value}`).isPositive();\r\n}\r\n\r\nexport function isNegative(value: string | number): boolean {\r\n  return new BigNumber(`${value}`).isNegative();\r\n}\r\n\r\nexport function isZero(value: string | number): boolean {\r\n  return new BigNumber(`${value}`).isZero();\r\n}\r\n\r\nexport function countDecimalPlaces(value: string | number): number {\r\n  return new BigNumber(`${value}`).dp();\r\n}\r\n\r\nexport function convertNumberToString(value: string | number): string {\r\n  return new BigNumber(`${value}`).toString();\r\n}\r\n\r\nexport function convertStringToNumber(value: string | number): number {\r\n  return new BigNumber(`${value}`).toNumber();\r\n}\r\n\r\nexport function convertHexToString(hex: string): string {\r\n  return new BigNumber(`${hex}`).toString();\r\n}\r\n\r\nexport function convertStringToHex(value: string | number): string {\r\n  return new BigNumber(`${value}`).toString(16);\r\n}\r\n\r\nexport function greaterThan(numberOne: number | string, numberTwo: number | string): boolean {\r\n  return new BigNumber(`${numberOne}`).comparedTo(new BigNumber(`${numberTwo}`)) === 1;\r\n}\r\n\r\nexport function greaterThanOrEqual(numberOne: number, numberTwo: number): boolean {\r\n  return new BigNumber(`${numberOne}`).comparedTo(new BigNumber(`${numberTwo}`)) >= 0;\r\n}\r\n\r\nexport function smallerThan(numberOne: number | string, numberTwo: number | string): boolean {\r\n  return new BigNumber(`${numberOne}`).comparedTo(new BigNumber(`${numberTwo}`)) === -1;\r\n}\r\n\r\nexport function smallerThanOrEqual(numberOne: number, numberTwo: number): boolean {\r\n  return new BigNumber(`${numberOne}`).comparedTo(new BigNumber(`${numberTwo}`)) <= 0;\r\n}\r\n\r\nexport function multiply(numberOne: number | string, numberTwo: number | string): string {\r\n  return new BigNumber(`${numberOne}`).times(new BigNumber(`${numberTwo}`)).toString();\r\n}\r\n\r\nexport function divide(numberOne: number | string, numberTwo: number | string): string {\r\n  return new BigNumber(`${numberOne}`).dividedBy(new BigNumber(`${numberTwo}`)).toString();\r\n}\r\n\r\nexport function floorDivide(numberOne: number | string, numberTwo: number | string): string {\r\n  return new BigNumber(`${numberOne}`).dividedToIntegerBy(new BigNumber(`${numberTwo}`)).toString();\r\n}\r\n\r\nexport function mod(numberOne: number | string, numberTwo: number | string): string {\r\n  return new BigNumber(`${numberOne}`).mod(new BigNumber(`${numberTwo}`)).toString();\r\n}\r\n\r\nexport function add(numberOne: number | string, numberTwo: number | string): string {\r\n  return new BigNumber(`${numberOne}`).plus(new BigNumber(`${numberTwo}`)).toString();\r\n}\r\n\r\nexport function subtract(numberOne: number | string, numberTwo: number | string): string {\r\n  return new BigNumber(`${numberOne}`).minus(new BigNumber(`${numberTwo}`)).toString();\r\n}\r\n\r\nexport function convertAmountToRawNumber(value: string | number, decimals = 18): string {\r\n  return new BigNumber(`${value}`).times(new BigNumber(\"10\").pow(decimals)).toString();\r\n}\r\n\r\nexport function convertAmountFromRawNumber(value: string | number, decimals = 18): string {\r\n  return new BigNumber(`${value}`).dividedBy(new BigNumber(\"10\").pow(decimals)).toString();\r\n}\r\n\r\nexport function handleSignificantDecimals(\r\n  value: string,\r\n  decimals: number,\r\n  buffer?: number,\r\n): string | null {\r\n  if (\r\n    !new BigNumber(`${decimals}`).isInteger() ||\r\n    (buffer && !new BigNumber(`${buffer}`).isInteger())\r\n  ) {\r\n    return null;\r\n  }\r\n  buffer = buffer ? convertStringToNumber(buffer) : 3;\r\n  decimals = convertStringToNumber(decimals);\r\n  const absolute = new BigNumber(`${value}`).abs().toNumber();\r\n  if (smallerThan(absolute, 1)) {\r\n    decimals = value.slice(2).search(/[^0]/g) + buffer;\r\n    decimals = decimals < 8 ? decimals : 8;\r\n  } else {\r\n    decimals = decimals < buffer ? decimals : buffer;\r\n  }\r\n  let result = new BigNumber(`${value}`).toFixed(decimals);\r\n  result = new BigNumber(`${result}`).toString();\r\n  return new BigNumber(`${result}`).dp() <= 2\r\n    ? new BigNumber(`${result}`).toFormat(2)\r\n    : new BigNumber(`${result}`).toFormat();\r\n}\r\n\r\nexport function formatFixedDecimals(value: string, decimals: number): string {\r\n  const _value = convertNumberToString(value);\r\n  const _decimals = convertStringToNumber(decimals);\r\n  const result = new BigNumber(new BigNumber(_value).toFixed(_decimals)).toString();\r\n  return result;\r\n}\r\n\r\nexport function formatInputDecimals(inputOne: string, inputTwo: string): string {\r\n  const _nativeAmountDecimalPlaces = countDecimalPlaces(inputTwo);\r\n  const decimals = _nativeAmountDecimalPlaces > 8 ? _nativeAmountDecimalPlaces : 8;\r\n  const result = new BigNumber(formatFixedDecimals(inputOne, decimals))\r\n    .toFormat()\r\n    .replace(/,/g, \"\");\r\n  return result;\r\n}\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport banner from \"../assets/walletconnect-banner.png\";\r\n\r\nconst SBannerWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\n\r\nconst SBanner = styled.div`\r\n  width: 275px;\r\n  height: 45px;\r\n  background: url(${banner}) no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nconst Banner = () => (\r\n  <SBannerWrapper>\r\n    <SBanner />\r\n  </SBannerWrapper>\r\n);\r\n\r\nexport default Banner;\r\n","import * as React from \"react\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IIconStyleProps {\r\n  size: number;\r\n}\r\n\r\nconst SIcon = styled.img<IIconStyleProps>`\r\n  width: ${({ size }) => `${size}px`};\r\n  height: ${({ size }) => `${size}px`};\r\n`;\r\n\r\nconst Icon = (props: any) => {\r\n  const { src, fallback, size } = props;\r\n  return (\r\n    <SIcon\r\n      {...props}\r\n      src={src}\r\n      size={size}\r\n      onError={(event: any) => {\r\n        if (fallback) {\r\n          event.target.src = fallback;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nIcon.propTypes = {\r\n  src: PropTypes.string,\r\n  fallback: PropTypes.string,\r\n  size: PropTypes.number,\r\n};\r\n\r\nIcon.defaultProps = {\r\n  src: null,\r\n  fallback: \"\",\r\n  size: 20,\r\n};\r\n\r\nexport default Icon;\r\n","import * as React from \"react\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport Icon from \"./Icon\";\r\nimport erc20 from \"../assets/erc20.svg\";\r\n\r\nconst ERC20Icon = (props: any) => {\r\n  const src = props.contractAddress ? `https://raw.githubusercontent.com/TrustWallet/tokens/master/tokens/${props.contractAddress.toLowerCase()}.png` : erc20;\r\n  // return <Icon src={src} fallback={erc20} />;\r\n  return <Icon src={src} fallback={erc20} />;\r\n  \r\n};\r\n\r\nERC20Icon.propTypes = {\r\n  contractAddress: PropTypes.string,\r\n  size: PropTypes.number,\r\n};\r\n\r\nERC20Icon.defaultProps = {\r\n  contractAddress: null,\r\n  size: 20,\r\n};\r\n\r\nexport default ERC20Icon;\r\n","import { convertStringToHex } from \"./bignumber\";\r\nimport { providers,Contract } from \"ethers\";\r\nimport { convertHexToString } from \"./bignumber\";\r\nimport { getChainData } from \"./utilities\";\r\nimport {balanceOfABI, decimalsOfABI} from '../constant/abi'\r\n\r\nlet provider ;\r\nexport const initProvider = (chainId) => {\r\n    const rpcUrl = getChainData(parseInt(chainId,10)).rpc_url;\r\n    provider = new providers.JsonRpcProvider(rpcUrl);\r\n}\r\n\r\nexport const getAccounts = async addresss => {\r\n  const accounts = await provider.listAccounts().then(response => response);\r\n  return accounts;\r\n};\r\nexport const getBalance = async address => {\r\n  const balance = await provider.getBalance(address).then(response => response);\r\n  return convertHexToString(balance);\r\n};\r\nexport const getProviderGasPrice = async () => {\r\n  const gasPrice = await provider.getGasPrice().then(response => response);\r\n  return convertStringToHex(gasPrice);\r\n};\r\n\r\nexport const getTokenBalance = async (address,tokenAddress) => {\r\n   const contract = new Contract(tokenAddress,balanceOfABI,provider);\r\n   const tokenBalance = await contract.balanceOf(address)\r\n   return convertStringToHex('0x'+tokenBalance);\r\n};\r\nexport const getTokenDecimals = async (tokenAddress) => {\r\n   const contract = new Contract(tokenAddress,decimalsOfABI,provider);\r\n   return await contract.decimals()\r\n}\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Icon from \"./Icon\";\r\nimport ERC20Icon from \"./ERC20Icon\";\r\nimport eth from \"../assets/eth.svg\";\r\nimport xdai from \"../assets/xdai.png\";\r\nimport { handleSignificantDecimals, convertAmountFromRawNumber } from \"../helpers/bignumber\";\r\n\r\nconst SAssetRow = styled.div`\r\n  width: 100%;\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\nconst SAssetRowLeft = styled.div`\r\n  display: flex;\r\n`;\r\nconst SAssetName = styled.div`\r\n  display: flex;\r\n  margin-left: 10px;\r\n`;\r\nconst SAssetRowRight = styled.div`\r\n  display: flex;\r\n`;\r\nconst SAssetBalance = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst AssetRow = (props: any) => {\r\n  const { asset } = props;\r\n  console.log('assetRow',asset);\r\n  const nativeCurrencyIcon =\r\n    asset.symbol && asset.symbol.toLowerCase() === \"eth\"\r\n      ? eth\r\n      : asset.symbol && asset.symbol.toLowerCase() === \"xdai\"\r\n      ? xdai\r\n      : null;\r\n  \r\n  return (\r\n    <SAssetRow {...props}>\r\n      <SAssetRowLeft>\r\n        {nativeCurrencyIcon ? (\r\n          <Icon src={nativeCurrencyIcon} />\r\n        ) : (\r\n          <ERC20Icon contractAddress={asset.contractAddress.toLowerCase()} />\r\n        )}\r\n        <SAssetName>{asset.name}</SAssetName>\r\n      </SAssetRowLeft>\r\n      <SAssetRowRight>\r\n        <SAssetBalance>\r\n          {`${handleSignificantDecimals(convertAmountFromRawNumber(asset.balance,asset.decimals),asset.decimals)} ${\r\n            asset.symbol\r\n          }`}\r\n        </SAssetBalance>\r\n      </SAssetRowRight>\r\n    </SAssetRow>\r\n  );\r\n};\r\n\r\nexport default AssetRow;\r\n","import * as React from \"react\";\r\nimport Column from \"./Column\";\r\nimport AssetRow from \"./AssetRow\";\r\nimport { IAssetData } from \"../helpers/types\";\r\nimport { getChainData } from \"src/helpers/utilities\";\r\n\r\nconst AccountAssets = (props: any) => {\r\n  const { assets, chainId } = props;\r\n  const [nativeCurrency, setNativeCurrency] = React.useState<IAssetData>();\r\n  const [tokens, setTokens] = React.useState<IAssetData[]>();\r\n  React.useEffect(() => {\r\n    if (!assets.length) { \r\n      return;\r\n    }\r\n    const defaultNativeCurrency: IAssetData = getChainData(chainId).native_currency;\r\n    const nativeCurrency: IAssetData = assets.filter((asset: IAssetData) => asset.symbol.toLowerCase() === defaultNativeCurrency.symbol.toLowerCase())[0];\r\n    const filteredTokens: IAssetData[] = assets.filter((asset: IAssetData) => asset.contractAddress !== '');\r\n    setTokens([...filteredTokens]);\r\n    setNativeCurrency(nativeCurrency)\r\n\r\n  }, [props.assets.length])\r\n\r\n  if (!nativeCurrency) {\r\n    return <div>\r\n      ...no accounts\r\n    </div>\r\n  }\r\n\r\n  return (\r\n    <Column center>\r\n      <AssetRow key={nativeCurrency.name} asset={nativeCurrency} />\r\n      {tokens?.map(token => (\r\n        <AssetRow key={token.symbol} asset={token} />\r\n      ))}\r\n    </Column>\r\n  );\r\n};\r\n\r\nexport default AccountAssets;\r\n","const example = {\r\n  types: {\r\n    EIP712Domain: [\r\n      { name: \"name\", type: \"string\" },\r\n      { name: \"version\", type: \"string\" },\r\n      { name: \"verifyingContract\", type: \"address\" },\r\n    ],\r\n    RelayRequest: [\r\n      { name: \"target\", type: \"address\" },\r\n      { name: \"encodedFunction\", type: \"bytes\" },\r\n      { name: \"gasData\", type: \"GasData\" },\r\n      { name: \"relayData\", type: \"RelayData\" },\r\n    ],\r\n    GasData: [\r\n      { name: \"gasLimit\", type: \"uint256\" },\r\n      { name: \"gasPrice\", type: \"uint256\" },\r\n      { name: \"pctRelayFee\", type: \"uint256\" },\r\n      { name: \"baseRelayFee\", type: \"uint256\" },\r\n    ],\r\n    RelayData: [\r\n      { name: \"senderAddress\", type: \"address\" },\r\n      { name: \"senderNonce\", type: \"uint256\" },\r\n      { name: \"relayWorker\", type: \"address\" },\r\n      { name: \"paymaster\", type: \"address\" },\r\n    ],\r\n  },\r\n  domain: {\r\n    name: \"GSN Relayed Transaction\",\r\n    version: \"1\",\r\n    chainId: 42,\r\n    verifyingContract: \"0x6453D37248Ab2C16eBd1A8f782a2CBC65860E60B\",\r\n  },\r\n  primaryType: \"RelayRequest\",\r\n  message: {\r\n    target: \"0x9cf40ef3d1622efe270fe6fe720585b4be4eeeff\",\r\n    encodedFunction:\r\n      \"0xa9059cbb0000000000000000000000002e0d94754b348d208d64d52d78bcd443afa9fa520000000000000000000000000000000000000000000000000000000000000007\",\r\n    gasData: { gasLimit: \"39507\", gasPrice: \"1700000000\", pctRelayFee: \"70\", baseRelayFee: \"0\" },\r\n    relayData: {\r\n      senderAddress: \"0x22d491bde2303f2f43325b2108d26f1eaba1e32b\",\r\n      senderNonce: \"3\",\r\n      relayWorker: \"0x3baee457ad824c94bd3953183d725847d023a2cf\",\r\n      paymaster: \"0x957F270d45e9Ceca5c5af2b49f1b5dC1Abb0421c\",\r\n    },\r\n  },\r\n};\r\n\r\nexport const eip712 = {\r\n  example,\r\n};\r\n","export const balanceOfABI = [\r\n    {\r\n      \"constant\": true,\r\n      \"inputs\": [\r\n        {\r\n          \"name\": \"_owner\",\r\n          \"type\": \"address\"\r\n        }\r\n      ],\r\n      \"name\": \"balanceOf\",\r\n      \"outputs\": [\r\n        {\r\n          \"name\": \"balance\",\r\n          \"type\": \"uint256\"\r\n        }\r\n      ],\r\n      \"payable\": false,\r\n      \"type\": \"function\"\r\n    }\r\n  ];\r\n\r\nexport const decimalsOfABI = [\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"decimals\",\r\n    outputs: [\r\n        {\r\n            name: \"\",\r\n            type: \"uint8\",\r\n        },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n},\r\n]","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\ninterface INetworkListProps {\r\n    networkList: { [key: string]: number }\r\n    selectChainId: (chainNumber: string) => void;\r\n}\r\nconst NetworkListWrapper = styled.div`\r\n    width:80%;\r\n    display:grid;\r\n    grid-template-columns: repeat(3,1fr);\r\n    grid-gap:12px;\r\n`\r\nconst NetworkListItem = styled.button`\r\n    padding: 0.5rem;\r\n    border-radius: 8px;\r\n    background-color: #27C4B8;\r\n    color: black;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n`\r\nconst NetworkList = ({ networkList, selectChainId }: INetworkListProps) => {\r\n    const networkArr = Object.entries(networkList);\r\n    return (\r\n        <NetworkListWrapper>\r\n            {networkArr.map(([name, chainId]) => <NetworkListItem key={chainId} onClick={() => selectChainId(chainId.toString())}>{name}</NetworkListItem>)}\r\n        </NetworkListWrapper>\r\n    )\r\n}\r\nexport default NetworkList","export const testNet = {\r\n    'Ethereum-Goerli': 5,\r\n    'Polygon-Mumbai': 80001,\r\n    'XDC-APOTHEM': 51,\r\n}\r\nexport const activeNet = {\r\n    Ethereum: 1,\r\n    Polygon: 137,\r\n    Avalanche: 43114,\r\n}","export default {\r\n    ETHEREUM: 1,\r\n    POLYGON:137,\r\n    RSK: 30,\r\n    BSC: 56,\r\n    HECO: 128,\r\n    FANTOM: 250,\r\n    CELO: 42220,\r\n    METADIUM: 11,\r\n    XDAI: 100,\r\n    KUCOIN: 321,\r\n    SONGBIRD: 19,\r\n    AVALANCHE: 43114,\r\n    EWT: 246,\r\n    ARBITRUM: 42161,\r\n    BODA: 288,\r\n    OEC: 66,\r\n    HARMONY: 1666600000,\r\n    ORBITCHAIN: 2017,\r\n    OPENCOIN: 474142,\r\n    CRONOS: 25,\r\n    PALM: 11297108109,\r\n    FLARE: 14,\r\n\r\n}","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport WalletConnect from \"@dcentwallet/walletconnect-client\";\r\nimport QRCodeModal from \"@dcentwallet/qrcode-modal\";\r\nimport { convertUtf8ToHex } from \"@walletconnect/utils\";\r\nimport { IInternalEvent, } from \"@walletconnect/types\";\r\n// IPushServerOptions\r\nimport Button from \"./components/Button\";\r\nimport Column from \"./components/Column\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Modal from \"./components/Modal\";\r\nimport Header from \"./components/Header\";\r\nimport Loader from \"./components/Loader\";\r\nimport { fonts } from \"./styles\";\r\nimport { apiGetAccountNonce, apiGetGasPrices } from \"./helpers/api\"; // apiGetAccountNonce\r\n\r\nimport {\r\n  sanitizeHex,\r\n  verifySignature,\r\n  hashTypedDataMessage,\r\n  hashMessage,\r\n  getChainData,\r\n} from \"./helpers/utilities\";\r\nimport { convertAmountToRawNumber, convertStringToHex } from \"./helpers/bignumber\";\r\n\r\nimport { IAssetData } from \"./helpers/types\";\r\nimport Banner from \"./components/Banner\";\r\nimport AccountAssets from \"./components/AccountAssets\";\r\nimport { eip712 } from \"./helpers/eip712\";\r\nimport { getBalance, getProviderGasPrice, getTokenBalance, getTokenDecimals, initProvider } from \"./helpers/ethers_utils\";\r\nimport NetworkList from \"./components/NetworkList\";\r\nimport { activeNet, testNet } from \"./constant/EthereumType\";\r\nimport NetworkType from \"./constant/NetworkType\";\r\nconst SLayout = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  text-align: center;\r\n`;\r\n\r\nconst SContent = styled(Wrapper as any)`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0 16px;\r\n`;\r\n\r\nconst SLanding = styled(Column as any)`\r\n  height: 600px;\r\n`;\r\n\r\nconst SButtonContainer = styled(Column as any)`\r\n  width: 250px;\r\n  margin: 50px 0;\r\n`;\r\n\r\nconst SConnectButton = styled(Button as any)`\r\n  border-radius: 8px;\r\n  font-size: ${fonts.size.medium};\r\n  height: 44px;\r\n  width: 100%;\r\n  margin: 12px 0;\r\n`;\r\n\r\nconst SContainer = styled.div`\r\n  height: 100%;\r\n  min-height: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  word-break: break-word;\r\n`;\r\n\r\nconst SModalContainer = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nconst SModalTitle = styled.div`\r\n  margin: 1em 0;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst SModalParagraph = styled.p`\r\n  margin-top: 30px;\r\n`;\r\n\r\n// @ts-ignore\r\nconst SBalances = styled(SLanding as any)`\r\n  height: 100%;\r\n  & h3 {\r\n    padding-top: 30px;\r\n  }\r\n`;\r\n\r\nconst STable = styled(SContainer as any)`\r\n  flex-direction: column;\r\n  text-align: left;\r\n`;\r\n\r\nconst SRow = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  margin: 6px 0;\r\n`;\r\n\r\nconst SKey = styled.div`\r\n  width: 30%;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst SValue = styled.div`\r\n  width: 70%;\r\n  font-family: monospace;\r\n`;\r\n\r\nconst STestButtonContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst STestButton = styled(Button as any)`\r\n  border-radius: 8px;\r\n  font-size: ${fonts.size.medium};\r\n  height: 44px;\r\n  width: 100%;\r\n  max-width: 175px;\r\n  margin: 12px;\r\n`;\r\nconst SNetworkListWrapper = styled.div`\r\n  display:flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  height:40%;\r\n  font-size:1.5rem;\r\n  \r\n`\r\n\r\ninterface IAppState {\r\n  connector: WalletConnect | null;\r\n  fetching: boolean;\r\n  connected: boolean;\r\n  chainId: number;\r\n  showModal: boolean;\r\n  pendingRequest: boolean;\r\n  uri: string;\r\n  accounts: string[];\r\n  address: string;\r\n  result: any | null;\r\n  assets: IAssetData[];\r\n  token: IToken;\r\n}\r\n\r\ninterface IToken {\r\n  contractAddress: string;\r\n  decimals: number;\r\n}\r\n\r\nconst INITIAL_STATE: IAppState = {\r\n  connector: null,\r\n  fetching: false,\r\n  connected: false,\r\n  chainId: 137,\r\n  showModal: false,\r\n  pendingRequest: false,\r\n  uri: \"\",\r\n  accounts: [],\r\n  address: \"\",\r\n  result: null,\r\n  assets: [],\r\n  token: {\r\n    contractAddress: '',\r\n    decimals: 0,\r\n  }\r\n};\r\n\r\nconst qrcodeModalOptions = {\r\n  serviceName: \"D'CENT TEST DAPP\",\r\n  accounts: [\r\n    {\r\n      contractAddress: '0x2791bca1f2de4661ed88a30c99a7a9449aa84174',\r\n      networkType: 'POLYGON',\r\n      name: 'USD Coin',\r\n      symbol: 'USDC',\r\n    },\r\n    {\r\n      contractAddress: '0xc2132d05d31c914a87c6611c10748aeb04b58e8f',\r\n      networkType: 'POLYGON',\r\n      name: 'Tether',\r\n      symbol: 'USDT'\r\n    }\r\n  ]\r\n};\r\nclass App extends React.Component<any, any> {\r\n  public state: IAppState = {\r\n    ...INITIAL_STATE,\r\n  };\r\n\r\n  public setChainId = (chainNumber: string) => {\r\n    const chainId = parseInt(chainNumber, 10);\r\n    alert(`${chainNumber} 을 선택 하셨습니다`)\r\n    this.setState({\r\n      ...this.state,\r\n      chainId,\r\n    })\r\n  }\r\n\r\n  public connect = async () => {\r\n\r\n    const connector = new WalletConnect({ qrcodeModal: QRCodeModal, qrcodeModalOptions });\r\n\r\n    await this.setState({ connector });\r\n    // check if already connected\r\n    if (!connector.connected) {\r\n      // create new session\r\n      await connector.createSession({ chainId: this.state.chainId });\r\n    }\r\n    // subscribe to events\r\n    await this.subscribeToEvents();\r\n  };\r\n\r\n  public subscribeToEvents = () => {\r\n    const { connector } = this.state;\r\n\r\n    if (!connector) {\r\n      return;\r\n    }\r\n\r\n    connector.on(\"session_update\", async (error, payload) => {\r\n      console.log(`connector.on(\"session_update\")`);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      const { chainId, accounts } = payload.params[0];\r\n      this.onSessionUpdate(accounts, chainId);\r\n    });\r\n\r\n    connector.on(\"connect\", (error, payload) => {\r\n      console.log(`connector.on(\"connect\")`);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      this.onConnect(payload);\r\n    });\r\n\r\n    connector.on(\"disconnect\", (error, payload) => {\r\n      console.log(`connector.on(\"disconnect\")`);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      this.onDisconnect();\r\n    });\r\n\r\n    if (connector.connected) {\r\n      const { chainId, accounts } = connector;\r\n      initProvider(chainId)\r\n      const address = accounts[0];\r\n      this.setState({\r\n        connected: true,\r\n        chainId: 1,\r\n        accounts,\r\n        address,\r\n      });\r\n      this.onSessionUpdate(accounts, chainId);\r\n    }\r\n    this.setState({ connector });\r\n  };\r\n\r\n  public killSession = async () => {\r\n    const { connector } = this.state;\r\n    if (connector) {\r\n      connector.killSession();\r\n    }\r\n    this.resetApp();\r\n  };\r\n\r\n  public resetApp = async () => {\r\n    await this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  public onConnect = async (payload: IInternalEvent) => {\r\n    const { chainId, accounts } = payload.params[0];\r\n    const address = accounts[0].toLowerCase();\r\n    initProvider(chainId)\r\n    await this.setState({\r\n      connected: true,\r\n      chainId,\r\n      accounts,\r\n      address,\r\n    });\r\n    await this.getAccountAssets();\r\n  };\r\n\r\n  public onDisconnect = async () => {\r\n    this.resetApp();\r\n  };\r\n\r\n  public onSessionUpdate = async (accounts: string[], chainId: number) => {\r\n    const address = accounts[0];\r\n    await this.setState({ chainId, accounts, address });\r\n    await this.getAccountAssets();\r\n  };\r\n\r\n  public getAccountAssets = async () => {\r\n    const { address, chainId } = this.state;\r\n    this.setState({ fetching: true });\r\n    try {\r\n      const assets = [];\r\n      const nativeBalance = await getBalance(address);\r\n      const { native_currency } = getChainData(chainId);\r\n      assets.push({\r\n        ...native_currency,\r\n        balance: nativeBalance,\r\n      })\r\n      const tokens = qrcodeModalOptions.accounts.filter(account => {\r\n        if (!account.contractAddress) {\r\n          return false;\r\n        }\r\n        const tokenChainId = Object.prototype.hasOwnProperty.call(NetworkType, account.networkType.toUpperCase()) ? NetworkType[account.networkType.toUpperCase()] : null;\r\n        if (!tokenChainId || tokenChainId.toString() !== chainId.toString()) {\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n      if (tokens.length) {\r\n        const result = await Promise.all(tokens.map(async account => {\r\n          const tokenBalance = await getTokenBalance(address, account.contractAddress);\r\n          const tokenDecimals = await getTokenDecimals(account.contractAddress);\r\n          return {\r\n            contractAddress: account.contractAddress,\r\n            symbol: account.symbol,\r\n            name: account.name,\r\n            balance: tokenBalance,\r\n            decimals: tokenDecimals.toString()\r\n          }\r\n        }))\r\n        assets.push(...result)\r\n      }\r\n      this.setState({\r\n        ...this.state,\r\n        address,\r\n        fetching: false,\r\n        assets,\r\n      })\r\n    } catch (error) {\r\n      console.error(error);\r\n      await this.setState({ fetching: false });\r\n    }\r\n  };\r\n\r\n  public toggleModal = () => this.setState({ showModal: !this.state.showModal });\r\n\r\n\r\n  public testSendTransaction = async () => {\r\n    const { connector, address } = this.state;\r\n\r\n    if (!connector) {\r\n      return;\r\n    }\r\n    const from = address;\r\n\r\n    // to\r\n    const to = '0xb10C975b92F563AF88F34DB4d7178352c5bc1311';\r\n    // const _nonce = await apiGetTransactionCount(address);\r\n    const gasPrices = await getProviderGasPrice();\r\n    const gasPrice = sanitizeHex(gasPrices);\r\n    // gasLimit\r\n    const _gasLimit = 21000;\r\n    const gasLimit = sanitizeHex(convertStringToHex(_gasLimit));\r\n\r\n    // value\r\n    const _value = 150000000000000000;\r\n    const value = sanitizeHex(convertStringToHex(_value));\r\n\r\n    // data\r\n    const data = \"0x\";\r\n    // test transaction\r\n    const tx = {\r\n      from,\r\n      to,\r\n      // nonce,\r\n      gasPrice,\r\n      gasLimit,\r\n      value,\r\n      data,\r\n    };\r\n\r\n    try {\r\n      // open modal\r\n      this.toggleModal();\r\n\r\n      // toggle pending request indicator\r\n      this.setState({ pendingRequest: true });\r\n\r\n      // send transaction\r\n      const result = await connector.sendTransaction(tx);\r\n\r\n      // format displayed result\r\n      const formattedResult = {\r\n        method: \"eth_sendTransaction\",\r\n        txHash: result,\r\n        from: address,\r\n        to: address,\r\n        value: `${_value} ETH`,\r\n      };\r\n\r\n      // display result\r\n      this.setState({\r\n        connector,\r\n        pendingRequest: false,\r\n        result: formattedResult || null,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.setState({ connector, pendingRequest: false, result: null });\r\n    }\r\n  };\r\n\r\n  public testSignTransaction = async () => {\r\n    const { connector, address, chainId } = this.state;\r\n\r\n    if (!connector) {\r\n      return;\r\n    }\r\n\r\n    // from\r\n    const from = address;\r\n\r\n    // to\r\n    const to = address;\r\n\r\n    // nonce\r\n    const _nonce = await apiGetAccountNonce(address, chainId);\r\n    const nonce = sanitizeHex(convertStringToHex(_nonce));\r\n\r\n    // gasPrice\r\n    const gasPrices = await apiGetGasPrices();\r\n    const _gasPrice = gasPrices.slow.price;\r\n    const gasPrice = sanitizeHex(convertStringToHex(convertAmountToRawNumber(_gasPrice, 9)));\r\n\r\n    // gasLimit\r\n    const _gasLimit = 21000;\r\n    const gasLimit = sanitizeHex(convertStringToHex(_gasLimit));\r\n\r\n    // value\r\n    const _value = 0;\r\n    const value = sanitizeHex(convertStringToHex(_value));\r\n\r\n    // data\r\n    const data = \"0x\";\r\n\r\n    // test transaction\r\n    const tx = {\r\n      from,\r\n      to,\r\n      nonce,\r\n      gasPrice,\r\n      gasLimit,\r\n      value,\r\n      data,\r\n    };\r\n\r\n    try {\r\n      // open modal\r\n      this.toggleModal();\r\n\r\n      // toggle pending request indicator\r\n      this.setState({ pendingRequest: true });\r\n\r\n      // send transaction\r\n      const result = await connector.signTransaction(tx);\r\n\r\n      // format displayed result\r\n      const formattedResult = {\r\n        method: \"eth_signTransaction\",\r\n        from: address,\r\n        to: address,\r\n        value: `${_value} ETH`,\r\n        result,\r\n      };\r\n\r\n      // display result\r\n      this.setState({\r\n        connector,\r\n        pendingRequest: false,\r\n        result: formattedResult || null,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.setState({ connector, pendingRequest: false, result: null });\r\n    }\r\n  };\r\n\r\n  public testLegacySignMessage = async () => {\r\n    const { connector, address, chainId } = this.state;\r\n\r\n    if (!connector) {\r\n      return;\r\n    }\r\n\r\n    // test message\r\n    const message = `My email is john@doe.com - ${new Date().toUTCString()}`;\r\n\r\n    // hash message\r\n    const hash = hashMessage(message);\r\n\r\n    // eth_sign params\r\n    const msgParams = [address, hash];\r\n\r\n    try {\r\n      // open modal\r\n      this.toggleModal();\r\n\r\n      // toggle pending request indicator\r\n      this.setState({ pendingRequest: true });\r\n\r\n      // send message\r\n      const result = await connector.signMessage(msgParams);\r\n\r\n      // verify signature\r\n      const valid = await verifySignature(address, result, hash, chainId);\r\n\r\n      // format displayed result\r\n      const formattedResult = {\r\n        method: \"eth_sign (legacy)\",\r\n        address,\r\n        valid,\r\n        result,\r\n      };\r\n\r\n      // display result\r\n      this.setState({\r\n        connector,\r\n        pendingRequest: false,\r\n        result: formattedResult || null,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.setState({ connector, pendingRequest: false, result: null });\r\n    }\r\n  };\r\n\r\n  public testStandardSignMessage = async () => {\r\n    const { connector, address, chainId } = this.state;\r\n\r\n    if (!connector) {\r\n      return;\r\n    }\r\n\r\n    // test message\r\n    const message = `My email is john@doe.com - ${new Date().toUTCString()}`;\r\n\r\n    // encode message (hex)\r\n    const hexMsg = convertUtf8ToHex(message);\r\n\r\n    // eth_sign params\r\n    const msgParams = [address, hexMsg];\r\n\r\n    try {\r\n      // open modal\r\n      this.toggleModal();\r\n\r\n      // toggle pending request indicator\r\n      this.setState({ pendingRequest: true });\r\n\r\n      // send message\r\n      const result = await connector.signMessage(msgParams);\r\n\r\n      // verify signature\r\n      const hash = hashMessage(message);\r\n      const valid = await verifySignature(address, result, hash, chainId);\r\n\r\n      // format displayed result\r\n      const formattedResult = {\r\n        method: \"eth_sign (standard)\",\r\n        address,\r\n        valid,\r\n        result,\r\n      };\r\n\r\n      // display result\r\n      this.setState({\r\n        connector,\r\n        pendingRequest: false,\r\n        result: formattedResult || null,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.setState({ connector, pendingRequest: false, result: null });\r\n    }\r\n  };\r\n\r\n  public testPersonalSignMessage = async () => {\r\n    const { connector, address, chainId } = this.state;\r\n\r\n    if (!connector) {\r\n      return;\r\n    }\r\n\r\n    // test message\r\n    const message = `My email is john@doe.com - ${new Date().toUTCString()}`;\r\n\r\n    // encode message (hex)\r\n    const hexMsg = convertUtf8ToHex(message);\r\n\r\n    // eth_sign params\r\n    const msgParams = [hexMsg, address];\r\n\r\n    try {\r\n      // open modal\r\n      this.toggleModal();\r\n\r\n      // toggle pending request indicator\r\n      this.setState({ pendingRequest: true });\r\n\r\n      // send message\r\n      const result = await connector.signPersonalMessage(msgParams);\r\n\r\n      // verify signature\r\n      const hash = hashMessage(message);\r\n      const valid = await verifySignature(address, result, hash, chainId);\r\n\r\n      // format displayed result\r\n      const formattedResult = {\r\n        method: \"personal_sign\",\r\n        address,\r\n        valid,\r\n        result,\r\n      };\r\n\r\n      // display result\r\n      this.setState({\r\n        connector,\r\n        pendingRequest: false,\r\n        result: formattedResult || null,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.setState({ connector, pendingRequest: false, result: null });\r\n    }\r\n  };\r\n\r\n  public testSignTypedData = async () => {\r\n    const { connector, address, chainId } = this.state;\r\n\r\n    if (!connector) {\r\n      return;\r\n    }\r\n\r\n    const message = JSON.stringify(eip712.example);\r\n\r\n    // eth_signTypedData params\r\n    const msgParams = [address, message];\r\n\r\n    try {\r\n      // open modal\r\n      this.toggleModal();\r\n\r\n      // toggle pending request indicator\r\n      this.setState({ pendingRequest: true });\r\n\r\n      // sign typed data\r\n      const result = await connector.signTypedData(msgParams);\r\n\r\n      // verify signature\r\n      const hash = hashTypedDataMessage(message);\r\n      const valid = await verifySignature(address, result, hash, chainId);\r\n\r\n      // format displayed result\r\n      const formattedResult = {\r\n        method: \"eth_signTypedData\",\r\n        address,\r\n        valid,\r\n        result,\r\n      };\r\n\r\n      // display result\r\n      this.setState({\r\n        connector,\r\n        pendingRequest: false,\r\n        result: formattedResult || null,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.setState({ connector, pendingRequest: false, result: null });\r\n    }\r\n  };\r\n\r\n  public render = () => {\r\n    const {\r\n      assets,\r\n      address,\r\n      connected,\r\n      chainId,\r\n      fetching,\r\n      showModal,\r\n      pendingRequest,\r\n      result,\r\n    } = this.state;\r\n\r\n    return (\r\n      <SLayout>\r\n        <Column maxWidth={1000} spanHeight>\r\n          <Header\r\n            connected={connected}\r\n            address={address}\r\n            chainId={chainId}\r\n            killSession={this.killSession}\r\n          />\r\n          <SContent>\r\n            {!address && !assets.length ? (\r\n              <SLanding center>\r\n                <h3>\r\n                  {`Try out D'CENT WalletConnect`}\r\n                  <br />\r\n                  <span>{`v${process.env.REACT_APP_VERSION}`}</span>\r\n                </h3>\r\n                <SNetworkListWrapper>\r\n                  <span>Mainnet</span>\r\n                  <NetworkList networkList={activeNet} selectChainId={this.setChainId} />\r\n                  <span>Testnet</span>\r\n                  <NetworkList networkList={testNet} selectChainId={this.setChainId} />\r\n                </SNetworkListWrapper>\r\n                <SButtonContainer>\r\n                  <SConnectButton left onClick={this.connect} fetching={fetching}>\r\n                    {\"Connect to WalletConnect\"}\r\n                  </SConnectButton>\r\n                </SButtonContainer>\r\n              </SLanding>\r\n            ) : (\r\n              <SBalances>\r\n                <Banner />\r\n                <h3>Actions</h3>\r\n                <Column center>\r\n                  <STestButtonContainer>\r\n                    <STestButton left onClick={this.testSendTransaction}>\r\n                      {\"eth_sendTransaction\"}\r\n                    </STestButton>\r\n                    {/* <STestButton left onClick={this.testSignTransaction}>\r\n                      {\"eth_signTransaction\"}\r\n                    </STestButton> */}\r\n                    <STestButton left onClick={this.testSignTypedData}>\r\n                      {\"eth_signTypedData\"}\r\n                    </STestButton>\r\n                    <STestButton left onClick={this.testLegacySignMessage}>\r\n                      {\"eth_sign (legacy)\"}\r\n                    </STestButton>\r\n                    <STestButton left onClick={this.testStandardSignMessage}>\r\n                      {\"eth_sign (standard)\"}\r\n                    </STestButton>\r\n                    <STestButton left onClick={this.testPersonalSignMessage}>\r\n                      {\"personal_sign\"}\r\n                    </STestButton>\r\n                  </STestButtonContainer>\r\n                </Column>\r\n                <h3>Balances</h3>\r\n                {!fetching ? (\r\n                  <AccountAssets chainId={chainId} assets={assets} />\r\n                ) : (\r\n                  <Column center>\r\n                    <SContainer>\r\n                      <Loader />\r\n                    </SContainer>\r\n                  </Column>\r\n                )}\r\n              </SBalances>\r\n            )}\r\n          </SContent>\r\n        </Column>\r\n        <Modal show={showModal} toggleModal={this.toggleModal}>\r\n          {pendingRequest ? (\r\n            <SModalContainer>\r\n              <SModalTitle>{\"Pending Call Request\"}</SModalTitle>\r\n              <SContainer>\r\n                <Loader />\r\n                <SModalParagraph>{\"Approve or reject request using your wallet\"}</SModalParagraph>\r\n              </SContainer>\r\n            </SModalContainer>\r\n          ) : result ? (\r\n            <SModalContainer>\r\n              <SModalTitle>{\"Call Request Approved\"}</SModalTitle>\r\n              <STable>\r\n                {Object.keys(result).map(key => (\r\n                  <SRow key={key}>\r\n                    <SKey>{key}</SKey>\r\n                    <SValue>{result[key].toString()}</SValue>\r\n                  </SRow>\r\n                ))}\r\n              </STable>\r\n            </SModalContainer>\r\n          ) : (\r\n            <SModalContainer>\r\n              <SModalTitle>{\"Call Request Rejected\"}</SModalTitle>\r\n            </SModalContainer>\r\n          )}\r\n        </Modal>\r\n      </SLayout>\r\n    );\r\n  };\r\n}\r\n\r\nexport default App;\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nimport App from \"./App\";\r\nimport { globalStyle } from \"./styles\";\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${globalStyle}\r\n`;\r\n\r\ndeclare global {\r\n  // tslint:disable-next-line\r\n  interface Window {\r\n    blockies: any;\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <>\r\n    <GlobalStyle />\r\n    <App />\r\n  </>,\r\n  document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}